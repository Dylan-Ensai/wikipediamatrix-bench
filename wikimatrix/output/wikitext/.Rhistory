"aesh" = "AVS",
"alimentation et environnement" = "Pro",
"allemand" = "Langues",
"anglais" = "Langues",
"Anglais" = "Langues",
"Anglais " = "Langues",
"Anglais-Lettres" = "Langues",
"arts appliqués" = "Arts plastiques",
"arts plastiques" = "Arts plastiques",
"Arts plastiques " = "Arts plastiques",
"chinois" = "Langues",
"classe ulis collège" = "AVS",
"CPE" = "AVS",
"documentation" = "Documentaliste",
"Documentation. Education aux médias et à l'information" = "Documentaliste",
"eco gestion" = "Pro",
"Eco gestion" = "Pro",
"Économie gestion" = "Pro",
"Économie gestion " = "Pro",
"économie-gestion" = "Pro",
"éducation musicale" = "Pro",
"espagnol" = "Langues",
"Espagnol" = "Langues",
"esthetique" = "Pro",
"français" = "Lettres",
"Français" = "Lettres",
"Français " = "Lettres",
"français / latin" = "Lettres",
"Génie civil topographie" = "Pro",
"Géomètre" = "Pro",
"GIB" = "Pro",
"HGEMC" = "Pro",
"Histoire geo" = "Histoire géographie",
"histoire géographie" = "Histoire géographie",
"histoire géographie " = "Histoire géographie",
"HISTOIRE GEOGRAPHIE EMC" = "Histoire géographie",
"Histoire Géographie EMC" = "Histoire géographie",
"histoire-géographie" = "Histoire géographie",
"Histoire-géographie" = "Histoire géographie",
"Histoire-Géographie" = "Histoire géographie",
"Histoire-géographie emc" = "Histoire géographie",
"Histoire/Geographie" = "Histoire géographie",
"Hôtellerie et restauration" = "Pro",
"La pâtisserie " = "Pro",
"Latin" = "Lettres",
"le Français" = "Lettres",
"lettres classiques" = "Lettres",
"Lettres Classiques" = "Lettres",
"Lettres classiques " = "Lettres",
"lettres histoire" = "Lettres",
"lettres modernes" = "Lettres",
"Lettres modernes" = "Lettres",
"Lettres Modernes" = "Lettres",
"Lettres Modernes " = "Lettres",
"Lettres modernes et Latin" = "Lettres",
"LV" = "Langues",
"LV2" = "Langues",
"Management en Hôtellerie Restauration " = "Pro",
"math" = "Mathématiques",
"Math et Sciences Physiques" = "Mathématiques",
"mathémathiques" = "Mathématiques",
"mathematiques" = "Mathématiques",
"mathématiques" = "Mathématiques",
"Mathématiques " = "Mathématiques",
"maths" = "Mathématiques",
"Maths" = "Mathématiques",
"philosophie" = "Lettres",
"physique chimie" = "Physique chimie",
"Physique Chimie" = "Physique chimie",
"physique-chimie" = "Physique chimie",
"productique" = "Pro",
"Professeur documentaliste" = "Documentaliste",
"Documentation" = "Documentaliste",
"professeure de langue étrangère" = "Langues",
"sciences" = "Physique chimie",
"sciences physiques" = "Physique chimie",
"sciences Physiques" = "Physique chimie",
"Sciences physiques" = "Physique chimie",
"Sciences Physiques" = "Physique chimie",
"Sciences physiques " = "Physique chimie",
"SES" = "Pro",
"SP" = "Pro",
"svt" = "SVT",
"Svt" = "SVT",
"technologie" = "Technologie",
"Technologie collège " = "Technologie",
"ULIS collège" = "AVS")
data_discipline <- data %>% count(Discipline)
ggplot(data=data_discipline, aes(x=Discipline, y=n)) +
geom_bar(stat="identity", fill="steelblue",position=position_dodge())+
ylab("Effectif")+
xlab("Discipline") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(FactoMineR)
res.acm <- MCA(data)
explor(res.acm)
library(explor)
explor(res.acm)
data$Horodateur <- NULL
res.acm <- MCA(data)
explor(res.acm)
View(data)
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(dplyr)
library(questionr)
library(FactoMineR)
library(explor)
data <- read.csv('donnees.csv')
#Mettre au prore les données
colnames(data) <- c("Horodateur","Sexe","Age","Discipline","AnneeEnseignement",
"Statut","RoleEPS","UtiliteEps","ImportanceFrancais","ImportanceMaths",
"ImportanceAP","ImportanceEPS","ImportanceAng","ImportancePhyChim",
"ConseilEps","ChargeEps","PlaceEPS","PrestigeEps","ProfPrincipalEps")
data$Horodateur <- NULL
#On enlève la réponse du prof d'EPS
data <- data[!(data$Discipline == "Eps"),]
data[,9:14] <- lapply(data[,9:14],function(u) factor(u,order = TRUE,levels = c(1,2,3,4,5)))
#Pour typer les variable en tant que variables ordinales
library(scales)
mycols <- c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF")
data_age <- data %>% count(Age) %>% mutate(prop = round(n * 100 / sum(n),1)) %>% arrange(desc(Age)) %>% mutate(lab.ypos = cumsum(prop) - 0.5*prop)
ggplot(data_age, aes(x="",y=prop, fill=Age))+
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0) +
geom_text(aes(y = lab.ypos, label = percent(prop/100)), color = "white")+
scale_fill_manual(values = mycols) +
theme_void()
#irec(data,Discipline)
## Recodage de data$Discipline en data$Discipline_rec
data$Discipline <- recode(data$Discipline,
"aesh" = "AVS",
"alimentation et environnement" = "Pro",
"allemand" = "Langues",
"anglais" = "Langues",
"Anglais" = "Langues",
"Anglais " = "Langues",
"Anglais-Lettres" = "Langues",
"arts appliqués" = "Arts plastiques",
"arts plastiques" = "Arts plastiques",
"Arts plastiques " = "Arts plastiques",
"chinois" = "Langues",
"classe ulis collège" = "AVS",
"CPE" = "AVS",
"documentation" = "Documentaliste",
"Documentation. Education aux médias et à l'information" = "Documentaliste",
"eco gestion" = "Pro",
"Eco gestion" = "Pro",
"Économie gestion" = "Pro",
"Économie gestion " = "Pro",
"économie-gestion" = "Pro",
"éducation musicale" = "Pro",
"espagnol" = "Langues",
"Espagnol" = "Langues",
"esthetique" = "Pro",
"français" = "Lettres",
"Français" = "Lettres",
"Français " = "Lettres",
"français / latin" = "Lettres",
"Génie civil topographie" = "Pro",
"Géomètre" = "Pro",
"GIB" = "Pro",
"HGEMC" = "Pro",
"Histoire geo" = "Histoire géographie",
"histoire géographie" = "Histoire géographie",
"histoire géographie " = "Histoire géographie",
"HISTOIRE GEOGRAPHIE EMC" = "Histoire géographie",
"Histoire Géographie EMC" = "Histoire géographie",
"histoire-géographie" = "Histoire géographie",
"Histoire-géographie" = "Histoire géographie",
"Histoire-Géographie" = "Histoire géographie",
"Histoire-géographie emc" = "Histoire géographie",
"Histoire/Geographie" = "Histoire géographie",
"Hôtellerie et restauration" = "Pro",
"La pâtisserie " = "Pro",
"Latin" = "Lettres",
"le Français" = "Lettres",
"lettres classiques" = "Lettres",
"Lettres Classiques" = "Lettres",
"Lettres classiques " = "Lettres",
"lettres histoire" = "Lettres",
"lettres modernes" = "Lettres",
"Lettres modernes" = "Lettres",
"Lettres Modernes" = "Lettres",
"Lettres Modernes " = "Lettres",
"Lettres modernes et Latin" = "Lettres",
"LV" = "Langues",
"LV2" = "Langues",
"Management en Hôtellerie Restauration " = "Pro",
"math" = "Mathématiques",
"Math et Sciences Physiques" = "Mathématiques",
"mathémathiques" = "Mathématiques",
"mathematiques" = "Mathématiques",
"mathématiques" = "Mathématiques",
"Mathématiques " = "Mathématiques",
"maths" = "Mathématiques",
"Maths" = "Mathématiques",
"philosophie" = "Lettres",
"physique chimie" = "Physique chimie",
"Physique Chimie" = "Physique chimie",
"physique-chimie" = "Physique chimie",
"productique" = "Pro",
"Professeur documentaliste" = "Documentaliste",
"Documentation" = "Documentaliste",
"professeure de langue étrangère" = "Langues",
"sciences" = "Physique chimie",
"sciences physiques" = "Physique chimie",
"sciences Physiques" = "Physique chimie",
"Sciences physiques" = "Physique chimie",
"Sciences Physiques" = "Physique chimie",
"Sciences physiques " = "Physique chimie",
"SES" = "Pro",
"SP" = "Pro",
"svt" = "SVT",
"Svt" = "SVT",
"technologie" = "Technologie",
"Technologie collège " = "Technologie",
"ULIS collège" = "AVS")
data_discipline <- data %>% count(Discipline)
ggplot(data=data_discipline, aes(x=Discipline, y=n)) +
geom_bar(stat="identity", fill="steelblue",position=position_dodge())+
ylab("Effectif")+
xlab("Discipline") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
aggregate(list(seq(1,nrow(data))),FUN=sum,by=list=(data$Sexe,data$RoleEPS))
aggregate(list(seq(1,nrow(data))),FUN=sum,by=list(data$Sexe,data$RoleEPS))
library(ggplot2)
library(questionr)
library(knitr)
library(dplyr)
library(forcats)
library(printr)
options(kableExtra.latex.load_packages = FALSE)
library(kableExtra)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning = FALSE,knitr.table.format = "latex",encoding = 'UTF-8',fig.pos = 'H')
load("data/transaction.rda")
load("data/alerts.rda")
tab_debit_credit_intern_flag <- tapply(transaction$monthly_volume,list(transaction$debit_credit_flag,transaction$intern_transfer_flag),sum,na.rm=TRUE)
rownames(tab_debit_credit_intern_flag) <- c("Transactions au crédit","Transactions au débit")
colnames(tab_debit_credit_intern_flag) <- c("Internationales","Domestiques")
tab_freq_debit_credit_intern_flag <- lprop(tab_debit_credit_intern_flag)  %>% round(2)
rownames(tab_freq_debit_credit_intern_flag) <- c("Transactions au crédit","Transactions au débit","Total")
colnames(tab_freq_debit_credit_intern_flag) <- c("Internationales","Domestiques","Total")
kable(tab_freq_debit_credit_intern_flag, "latex", caption = "Répartition des transactions au débit et au crédit selon leur provenance", booktabs = T) %>% kable_styling(latex_options = c("striped","HOLD_position"))
tab_freq_debit_credit_intern_flag
t <- tapply(list(seq(1,nrow(data))),list(data$Sexe,data$RoleEPS),sum,na.rm=TRUE)
t
tapply(transaction$monthly_volume,list(transaction$debit_credit_flag,transaction$intern_transfer_flag),sum,na.rm=TRUE)
t <- tapply(list(seq(1,nrow(data))),list(data$Sexe,data$RoleEPS),sum,na.rm=TRUE)
t <- seq(1,nrow(data))
t
list(data$Sexe,data$RoleEPS)
t list(data$Sexe,data$RoleEPS)
t <- list(data$Sexe,data$RoleEPS)
View(t)
sexe_utilite <- table(data$Sexe,data$RoleEPS)
sexe_utilite
sexe_utilite <- data.frame(table(data$Sexe,data$RoleEPS))
View(sexe_utilite)
cprop(sexe_utilite)
sexe_utilite <- cprop(table(data$Sexe,data$RoleEPS))
sexe_utilite
sexe_utilite <- lprop(table(data$Sexe,data$RoleEPS))
sexe_utilite
print(sexe_utilite, preview = "docx")
levels(data$RoleEPS)
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(dplyr)
library(questionr)
library(FactoMineR)
library(explor)
library(knitr)
library(kableExtra)
data <- read.csv('donnees.csv')
irec(data$RoleEPS)
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(dplyr)
library(questionr)
library(FactoMineR)
library(explor)
library(knitr)
library(kableExtra)
data <- read.csv('donnees.csv')
#Mettre au prore les données
colnames(data) <- c("Horodateur","Sexe","Age","Discipline","AnneeEnseignement",
"Statut","RoleEPS","UtiliteEps","ImportanceFrancais","ImportanceMaths",
"ImportanceAP","ImportanceEPS","ImportanceAng","ImportancePhyChim",
"ConseilEps","ChargeEps","PlaceEPS","PrestigeEps","ProfPrincipalEps")
data$Horodateur <- NULL
#On enlève la réponse du prof d'EPS
data <- data[!(data$Discipline == "Eps"),]
data[,9:14] <- lapply(data[,9:14],function(u) factor(u,order = TRUE,levels = c(1,2,3,4,5)))
#Pour typer les variable en tant que variables ordinales
#irec(data,Discipline)
## Recodage de data$Discipline en data$Discipline_rec
data$Discipline <- recode(data$Discipline,
"aesh" = "AVS",
"alimentation et environnement" = "Pro",
"allemand" = "Langues",
"anglais" = "Langues",
"Anglais" = "Langues",
"Anglais " = "Langues",
"Anglais-Lettres" = "Langues",
"arts appliqués" = "Arts plastiques",
"arts plastiques" = "Arts plastiques",
"Arts plastiques " = "Arts plastiques",
"chinois" = "Langues",
"classe ulis collège" = "AVS",
"CPE" = "AVS",
"documentation" = "Documentaliste",
"Documentation. Education aux médias et à l'information" = "Documentaliste",
"eco gestion" = "Pro",
"Eco gestion" = "Pro",
"Économie gestion" = "Pro",
"Économie gestion " = "Pro",
"économie-gestion" = "Pro",
"éducation musicale" = "Pro",
"espagnol" = "Langues",
"Espagnol" = "Langues",
"esthetique" = "Pro",
"français" = "Lettres",
"Français" = "Lettres",
"Français " = "Lettres",
"français / latin" = "Lettres",
"Génie civil topographie" = "Pro",
"Géomètre" = "Pro",
"GIB" = "Pro",
"HGEMC" = "Pro",
"Histoire geo" = "Histoire géographie",
"histoire géographie" = "Histoire géographie",
"histoire géographie " = "Histoire géographie",
"HISTOIRE GEOGRAPHIE EMC" = "Histoire géographie",
"Histoire Géographie EMC" = "Histoire géographie",
"histoire-géographie" = "Histoire géographie",
"Histoire-géographie" = "Histoire géographie",
"Histoire-Géographie" = "Histoire géographie",
"Histoire-géographie emc" = "Histoire géographie",
"Histoire/Geographie" = "Histoire géographie",
"Hôtellerie et restauration" = "Pro",
"La pâtisserie " = "Pro",
"Latin" = "Lettres",
"le Français" = "Lettres",
"lettres classiques" = "Lettres",
"Lettres Classiques" = "Lettres",
"Lettres classiques " = "Lettres",
"lettres histoire" = "Lettres",
"lettres modernes" = "Lettres",
"Lettres modernes" = "Lettres",
"Lettres Modernes" = "Lettres",
"Lettres Modernes " = "Lettres",
"Lettres modernes et Latin" = "Lettres",
"LV" = "Langues",
"LV2" = "Langues",
"Management en Hôtellerie Restauration " = "Pro",
"math" = "Mathématiques",
"Math et Sciences Physiques" = "Mathématiques",
"mathémathiques" = "Mathématiques",
"mathematiques" = "Mathématiques",
"mathématiques" = "Mathématiques",
"Mathématiques " = "Mathématiques",
"maths" = "Mathématiques",
"Maths" = "Mathématiques",
"philosophie" = "Lettres",
"physique chimie" = "Physique chimie",
"Physique Chimie" = "Physique chimie",
"physique-chimie" = "Physique chimie",
"productique" = "Pro",
"Professeur documentaliste" = "Documentaliste",
"Documentation" = "Documentaliste",
"professeure de langue étrangère" = "Langues",
"sciences" = "Physique chimie",
"sciences physiques" = "Physique chimie",
"sciences Physiques" = "Physique chimie",
"Sciences physiques" = "Physique chimie",
"Sciences Physiques" = "Physique chimie",
"Sciences physiques " = "Physique chimie",
"SES" = "Pro",
"SP" = "Pro",
"svt" = "SVT",
"Svt" = "SVT",
"technologie" = "Technologie",
"Technologie collège " = "Technologie",
"ULIS collège" = "AVS")
data_discipline <- data %>% count(Discipline)
ggplot(data=data_discipline, aes(x=Discipline, y=n)) +
geom_bar(stat="identity", fill="steelblue",position=position_dodge())+
ylab("Effectif")+
xlab("Discipline") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
irec(data$RoleEPS)
## Recodage de data$RoleEPS en data$RoleEPS_rec
data$RoleEPS_rec <- fct_recode(data$RoleEPS,
"tout cela à la fois" = "un combiné de tout ça")
sexe_utilite <- lprop(table(data$Sexe,data$RoleEPS)) %>% round(1)
#irec(data$RoleEPS)
## Recodage de data$RoleEPS en data$RoleEPS_rec
data$RoleEPS_rec <- recode(data$RoleEPS,
"tout cela à la fois" = "un combiné de tout ça")
sexe_utilite <- lprop(table(data$Sexe,data$RoleEPS)) %>% round(1)
kable(sexe_utilite, "latex", caption = "Titre", booktabs = T) %>% kable_styling(latex_options = c("striped","HOLD_position","scale_down"))
#irec(data$RoleEPS)
## Recodage de data$RoleEPS en data$RoleEPS_rec
data$RoleEPS_rec <- recode(data$RoleEPS,
"tout cela à la fois" = "un combiné de tout ça")
sexe_utilite <- lprop(table(data$Sexe,data$RoleEPS)) %>% round(1)
sexe_utilite
table(data$Sexe,data$RoleEPS)
irec(data$RoleEPS)
sexe_utilite
sexe_utilite[10]
sexe_utilite[2]
sexe_utilite[,2]
levels(RoleEPS)
levels(data$RoleEPS)
#irec(data$RoleEPS)
## Recodage de data$RoleEPS
data$RoleEPS <- recode(data$RoleEPS,
"un combiné de tout ça" = "tout cela à la fois")
data$RoleEPS <- factor(as.character(data$RoleEPS), levels = c("Un entraineur","Un animateur","Un éducateur","Un professeur","Sans avis","tout cela à la fois"))
levels(data$RoleEPS)
library(sampling)
install.packages(c("sampling","BalancedSampling"))
library(sampling)
library(BalancedSampling)
data("belgianmunicipalities")
data("belgianmunicipalities")
attach(belgianmunicipalities)
N=nrow(belgianmunicipalities)
attach(belgianmunicipalities)
N=nrow(belgianmunicipalities)
data("belgianmunicipalities")
attach(belgianmunicipalities)
library(sampling)
library(BalancedSampling)
######################################
# exercice 1
######################################
#point a)
#########
data(belgianmunicipalities)
attach(belgianmunicipalities)
# taille de la population
N=nrow(belgianmunicipalities)
# taille de l'?chantillon
n=200
#tirage ? prob. ?gales, sans remise
sim=10000
prob=matrix(0,nrow=sim,ncol=N)
for(i in 1:sim)
{
s=sample(1:N,n)
prob[i,1:N]=(1:N %in% s)
}
#probabilit?s d'inclusion estim?es par simulations
pik_est=apply(prob,2,mean)
boxplot(pik_est)
?attach
#probabilit?s d'inclusion th?oriques
pik=rep(n/N,N)
plot(pik,pik_est)
#maximum de l'erreur relative
max(abs(pik-pik_est)/pik)
#tirage ? prob. in?gales, sans remise
sim=10000
N=nrow(belgianmunicipalities)
#probabilit?s d'inclusion th?oriques
pik=inclusionprobabilities(Tot04,n)
summary(pik)
prob=matrix(0,nrow=sim,ncol=N)
for(i in 1:sim)
{
s=sample(1:N,n,p=pik)
prob[i,1:N]=(1:N %in% s)
}
#probabilit?s d'inclusion estim?es par simulations
pik_est=apply(prob,2,mean)
boxplot(pik_est)
plot(pik,pik_est,ylim=c(0,1))
abline(0,1,col="red")
#maximum de l'erreur relative
max(abs(pik-pik_est)/pik)
boxplot(pik,pik_est)
#tirage ? prob. in?gales de type Poisson, sans remise
sim=10000
N=nrow(belgianmunicipalities)
#probabilit?s d'inclusion th?oriques
pik=inclusionprobabilities(Tot04,n)
prob=matrix(0,nrow=sim,ncol=N)
for(i in 1:sim)
{
s=UPpoisson(pik)
prob[i,1:N]=(1:N %in% (1:N)[s==1])
}
#probabilit?s d'inclusion estim?es par simulations
pik_est=apply(prob,2,mean)
boxplot(pik_est)
plot(pik,pik_est)
abline(0,1,col="red")
setwd(/Users/dylandecrulle/git/wikipediamatrix-bench/wikimatrix/output/wikitext)
setwd("/Users/dylandecrulle/git/wikipediamatrix-bench/wikimatrix/output/wikitext")
?read.csv
data <- read.csv(file = 'test.csv',sep=""")
data <- read.csv(file = 'test.csv',sep=";")
data <- read.csv(file = 'test.csv',sep=";")
View(data)
data <- read.csv(file = 'test.csv',sep='"')
View(data)
setwd("/Users/dylandecrulle/git/wikipediamatrix-bench/wikimatrix/output/wikitext")
data <- read.csv(file = 'test.csv',sep=';')
View(data)
